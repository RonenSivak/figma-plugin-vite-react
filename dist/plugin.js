var I=Object.defineProperty,b=(t,e,r)=>e in t?I(t,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[e]=r,h=(t,e,r)=>(b(t,typeof e!="symbol"?e+"":e,r),r),u=(t,e,r)=>new Promise((s,i)=>{var a=n=>{try{l(r.next(n))}catch(d){i(d)}},o=n=>{try{l(r.throw(n))}catch(d){i(d)}},l=n=>n.done?s(n.value):Promise.resolve(n.value).then(a,o);l((r=r.apply(t,e)).next())});class M extends Error{constructor(e){super(e.payload[0])}}function f(){const t=new Array(36);for(let e=0;e<36;e++)t[e]=Math.floor(Math.random()*16);return t[14]=4,t[19]=t[19]&=-5,t[19]=t[19]|=8,t[8]=t[13]=t[18]=t[23]="-",t.map(e=>e.toString(16)).join("")}const p="__INTERNAL_SUCCESS_RESPONSE_EVENT",S="__INTERNAL_ERROR_RESPONSE_EVENT";class R{constructor(e){h(this,"emitStrategies",new Map),h(this,"receiveStrategies",new Map),this.side=e}receivesFrom(e,r){return this.receiveStrategies.set(e.name,r),this}emitsTo(e,r){return this.emitStrategies.set(e.name,r),this}startListening(){return new P(this.side,this.emitStrategies,this.receiveStrategies)}}class P{constructor(e,r=new Map,s=new Map){h(this,"messageHandlers",{}),h(this,"subscriptionListeners",{}),h(this,"pendingRequests",new Map),h(this,"cleanupCallbacks",[]),this.side=e,this.emitStrategies=r,this.receiveStrategies=s,s.forEach(i=>{const a=i((o,l)=>this.receiveNetworkMessage(o,l));a&&this.cleanupCallbacks.push(a)})}registerMessageHandler(e,r){this.messageHandlers[e]=r}getEmitStrategy(e){const r=this.emitStrategies.get(e.name);if(!r){const s=c.getCurrentSide();throw new Error(`No emit strategy is registered from ${s.name} to ${e.name}`)}return r}receiveNetworkMessage(e,r){return u(this,null,function*(){if(e.eventName===p){this.receiveSuccessResponse(e);return}if(e.eventName===S){this.receiveErrorResponse(e);return}this.invokeSubscribers(e),this.handleIncomingMessage(e,r)})}receiveSuccessResponse(e){return u(this,null,function*(){var r;const{resolve:s}=(r=this.pendingRequests.get(e.messageId))!=null?r:{};s&&(this.pendingRequests.delete(e.messageId),s(e.payload[0]))})}receiveErrorResponse(e){return u(this,null,function*(){var r;const{reject:s}=(r=this.pendingRequests.get(e.messageId))!=null?r:{};s&&(this.pendingRequests.delete(e.messageId),s(new M(e)))})}invokeSubscribers(e){return u(this,null,function*(){var r;Object.values((r=this.subscriptionListeners[e.eventName])!=null?r:{}).forEach(s=>{s(...e.payload,c.getSide(e.fromSide),e)})})}handleIncomingMessage(e,r){return u(this,null,function*(){const s=this.messageHandlers[e.eventName];if(s!=null){const i=c.getSide(e.fromSide);if(!i)throw new Error(`Message received from an unknown side: ${e.fromSide}`);const a=this.getEmitStrategy(i);try{const o=yield s(...e.payload,c.getSide(e.fromSide),e);a!=null&&a({messageId:e.messageId,fromSide:e.fromSide,eventName:p,payload:[o]},r)}catch(o){a!=null&&a({messageId:e.messageId,fromSide:e.fromSide,eventName:S,payload:[o instanceof Error?o.message:"Failed to handle"]},r)}}})}emit(e,r,s,...[i]){this.getEmitStrategy(e)({messageId:f(),fromSide:c.getCurrentSide().name,eventName:r.toString(),payload:s},i)}request(e,r,s){return u(this,arguments,function*(i,a,o,...[l]){const n=this.getEmitStrategy(i),d=f();return new Promise((E,N)=>{this.pendingRequests.set(d,{resolve:E,reject:N}),n({messageId:d,fromSide:c.getCurrentSide().name,eventName:a.toString(),payload:o},l)})})}subscribe(e,r){var s,i;const a=f(),o=(i=(s=this.subscriptionListeners)[e])!=null?i:s[e]={};return o[a]=r,()=>{delete this.subscriptionListeners[e][a]}}}class L{constructor(e){this.name=e}channelBuilder(){return new R(this)}}var c;(t=>{const e=[];let r;function s(){if(r==null)throw new Error("Logical side is not initialized yet.");return r}t.getCurrentSide=s;function i(l,n){if(r!=null)throw new Error("Logical side can be declared only once.");if(n.side!==l)throw new Error("Given side and channel side doesn't match");r=l}t.initialize=i;function a(l){return{listens:()=>{const n=new L(l);return e.push(n),n}}}t.createSide=a;function o(l){for(let n of e)if(n.name===l)return n;return null}t.getSide=o})(c||(c={}));const m=c.createSide("UI-side").listens(),w=c.createSide("Plugin-side").listens(),g=w.channelBuilder().emitsTo(m,t=>{figma.ui.postMessage(t)}).receivesFrom(m,t=>{const e=r=>t(r);return figma.ui.on("message",e),()=>figma.ui.off("message",e)}).startListening();let v=!1,y=null;const C=()=>{const t=figma.currentPage.selection;if(t.length===1){const e=t[0];e.type==="TEXT"&&(console.log("Text node selected:",e.id,e.characters),g.emit(m,"textClicked",[e.id,e.characters]))}},_=()=>(console.log("Starting selection listener"),v?"Selection listener already active":(y=C,figma.on("selectionchange",y),v=!0,"Selection listener started"));g.registerMessageHandler("ping",t=>(console.log("Plugin received ping with count:",t,"responding with pong"),`pong: ${t}`));g.registerMessageHandler("pong",()=>(console.log("Plugin received pong, responding with ping"),"ping"));g.registerMessageHandler("message",t=>(console.log("Plugin received message:",t),`received ${t} from plugin`));g.registerMessageHandler("createText",async t=>{console.log("Plugin creating text:",t);try{await figma.loadFontAsync({family:"Inter",style:"Regular"});const e=figma.createText();return e.characters=t,e.fontSize=24,e.fills=[{type:"SOLID",color:{r:0,g:0,b:0}}],figma.currentPage.appendChild(e),e.x=figma.viewport.center.x-e.width/2,e.y=figma.viewport.center.y-e.height/2,`Created text: "${t}"`}catch(e){return console.error("Error creating text:",e),`Error creating text: ${e}`}});g.registerMessageHandler("hello",t=>{console.log("UI side said:",t)});g.registerMessageHandler("helloAck",()=>{console.log("Received hello-ack from UI, sending ready signal"),g.emit(m,"ready",[])});async function H(){c.initialize(w,g),figma.showUI(__html__,{width:800,height:650,title:"Figma Plugin"}),console.log("Bootstrapped @",c.getCurrentSide().name),g.emit(m,"hello",["Plugin initialized"]),_()}H();
